package api

import (
	"log"
	"net/http"
	"sync"

	"github.com/4lerman/go_to_do_list/internal/service/to_do"
	"github.com/gorilla/mux"
	_ "github.com/4lerman/go_to_do_list/docs" // Import the docs generated by Swag CLI
	httpSwagger "github.com/swaggo/http-swagger"
)

type APIServer struct {
	addr string
	db *sync.Map
}

func NewAPIServer(addr string, db *sync.Map) *APIServer {
	return &APIServer{
		addr: addr,
		db: db,
	}
}

// @title To-Do List API
// @version 1.0
// @description This is a sample server for a to-do list.
// @host localhost:8080
// @BasePath /api/v1
func (s *APIServer) Run() error {
	router := mux.NewRouter()

	router.PathPrefix("/swagger/").Handler(httpSwagger.WrapHandler)

	subRouter := router.PathPrefix("/api/v1").Subrouter()

	toDoStore := to_do.NewStore(s.db)
	toDoService := to_do.NewHandler(toDoStore)
	toDoService.RegisterRoutes(subRouter)

	log.Println("Listening on", s.addr)
	return http.ListenAndServe(s.addr, router)
}